[gd_scene load_steps=16 format=3 uid="uid://ba6l2mcsnails"]

[ext_resource type="FontFile" uid="uid://qiul4lwd2ov5" path="res://Common/Poco.ttf" id="1_ptfrc"]
[ext_resource type="Script" path="res://UI/game_over_screen/game_over_screen.gd" id="2_cy0e5"]
[ext_resource type="Texture2D" uid="uid://baluwwbfn4sf7" path="res://UI/Buttons/4_long/button.png" id="3_t7dgf"]
[ext_resource type="Shader" path="res://UI/game_over_screen/GameOverScreen.gdshader" id="3_uqatf"]
[ext_resource type="Texture2D" uid="uid://cs4m8p4hrxg7v" path="res://UI/Buttons/4_long/pressed_button.png" id="4_opdj2"]
[ext_resource type="Texture2D" uid="uid://ox6g8eumw3rb" path="res://UI/Buttons/4_long/hover_button.png" id="5_q8mf1"]
[ext_resource type="Texture2D" uid="uid://c1i7sp6oova7f" path="res://assets/1_Heroes/Wizzard/Player/Death-player.png" id="7_fuxvp"]

[sub_resource type="Shader" id="Shader_h6q0l"]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : source_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hccsa"]
shader = SubResource("Shader_h6q0l")
shader_parameter/angle = -0.3
shader_parameter/position = -0.2
shader_parameter/spread = 0.5
shader_parameter/cutoff = 0.1
shader_parameter/falloff = 0.2
shader_parameter/edge_fade = 0.15
shader_parameter/speed = 1.0
shader_parameter/ray1_density = 8.0
shader_parameter/ray2_density = 30.0
shader_parameter/ray2_intensity = 0.3
shader_parameter/color = Color(1, 0.9, 0.65, 0.8)
shader_parameter/hdr = false
shader_parameter/seed = 5.0

[sub_resource type="Theme" id="Theme_fx6bf"]
Label/colors/font_color = Color(1, 0, 0, 1)
Label/font_sizes/font_size = 30
Label/fonts/font = ExtResource("1_ptfrc")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_enf8h"]
shader = ExtResource("3_uqatf")
shader_parameter/angle = 0.0
shader_parameter/position = 0.075
shader_parameter/spread = 0.5
shader_parameter/cutoff = 0.35
shader_parameter/falloff = 0.7
shader_parameter/edge_fade = 0.07
shader_parameter/speed = 1.0
shader_parameter/ray1_density = 8.0
shader_parameter/ray2_density = 70.0
shader_parameter/ray2_intensity = 0.3
shader_parameter/color = Color(1, 0.9, 0.65, 0.8)
shader_parameter/hdr = false
shader_parameter/seed = 5.0

[sub_resource type="Animation" id="Animation_m3n36"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("BlackBackground:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("shader:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("GameOver:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Sprite2D:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("ColorRect/HBoxContainer/RetryButton:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("ColorRect/HBoxContainer/BackToCastleButton:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("ColorRect/HBoxContainer/QuitGameButton:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_1qkmp"]
resource_name = "fade_to_black"
length = 4.0
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("BlackBackground:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(0, 0, 0, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("shader:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 3.9, 4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("GameOver:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1.5, 4),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("ColorRect/HBoxContainer/RetryButton:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 2.2, 2.7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("ColorRect/HBoxContainer/BackToCastleButton:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 2.5, 3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("ColorRect/HBoxContainer/QuitGameButton:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 2.75, 3.25),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Sprite2D:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.85, 1.5, 3.89, 3.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(0.724197, 0, 0.0872466, 1), Color(0.724197, 0, 0.0872466, 1), Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_tu41h"]
resource_name = "fade_to_normal"
length = 0.5
tracks/0/type = "method"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.6),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"queue_free"
}]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("BlackBackground:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 1), Color(0, 0, 0, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_alkfq"]
_data = {
"RESET": SubResource("Animation_m3n36"),
"fade_to_black": SubResource("Animation_1qkmp"),
"fade_to_normal": SubResource("Animation_tu41h")
}

[node name="GameOverScreen" type="Control"]
material = SubResource("ShaderMaterial_hccsa")
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = SubResource("Theme_fx6bf")
script = ExtResource("2_cy0e5")

[node name="shader" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_enf8h")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 1)

[node name="BlackBackground" type="ColorRect" parent="."]
modulate = Color(1, 1, 1, 0)
show_behind_parent = true
layout_mode = 0
offset_right = 488.0
offset_bottom = 270.0
color = Color(0, 0, 0, 1)

[node name="GameOver" type="Label" parent="."]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.2
anchor_top = 0.1
anchor_right = 0.8
anchor_bottom = 0.1
offset_left = -1.0
offset_top = 5.0
offset_right = -1.0
offset_bottom = 41.0
grow_horizontal = 2
grow_vertical = 2
text = "GAME OVER"
horizontal_alignment = 1
vertical_alignment = 1

[node name="ColorRect" type="ColorRect" parent="."]
top_level = true
layout_mode = 1
anchors_preset = -1
anchor_left = 0.2
anchor_top = 0.7
anchor_right = 0.8
anchor_bottom = 0.85
grow_horizontal = 0
grow_vertical = 2
color = Color(1, 1, 1, 0)

[node name="HBoxContainer" type="HBoxContainer" parent="ColorRect"]
layout_mode = 1
anchors_preset = 12
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = -22.0
grow_horizontal = 2
grow_vertical = 0
theme_override_constants/separation = 20
alignment = 1

[node name="RetryButton" type="TextureButton" parent="ColorRect/HBoxContainer"]
modulate = Color(1, 1, 1, 0)
layout_mode = 2
texture_normal = ExtResource("3_t7dgf")
texture_pressed = ExtResource("4_opdj2")
texture_hover = ExtResource("5_q8mf1")

[node name="Label" type="Label" parent="ColorRect/HBoxContainer/RetryButton"]
custom_minimum_size = Vector2(40, 23)
layout_mode = 0
offset_left = 2.0
offset_top = -10.5
offset_right = 55.0
offset_bottom = 25.5
theme_override_colors/font_color = Color(0.105882, 0.133333, 0.211765, 1)
theme_override_font_sizes/font_size = 10
text = "Retry"
horizontal_alignment = 1
vertical_alignment = 1

[node name="BackToCastleButton" type="TextureButton" parent="ColorRect/HBoxContainer"]
modulate = Color(1, 1, 1, 0)
custom_minimum_size = Vector2(80, 0)
layout_mode = 2
texture_normal = ExtResource("3_t7dgf")
texture_pressed = ExtResource("4_opdj2")
texture_hover = ExtResource("5_q8mf1")
ignore_texture_size = true
stretch_mode = 0

[node name="Label" type="Label" parent="ColorRect/HBoxContainer/BackToCastleButton"]
custom_minimum_size = Vector2(40, 23)
layout_mode = 0
offset_left = 8.0
offset_top = -10.5
offset_right = 72.0
offset_bottom = 25.5
theme_override_colors/font_color = Color(0.105882, 0.133333, 0.211765, 1)
theme_override_font_sizes/font_size = 10
text = "Back to castle"
horizontal_alignment = 1
vertical_alignment = 1

[node name="QuitGameButton" type="TextureButton" parent="ColorRect/HBoxContainer"]
modulate = Color(1, 1, 1, 0)
layout_mode = 2
texture_normal = ExtResource("3_t7dgf")
texture_pressed = ExtResource("4_opdj2")
texture_hover = ExtResource("5_q8mf1")

[node name="Label" type="Label" parent="ColorRect/HBoxContainer/QuitGameButton"]
custom_minimum_size = Vector2(40, 23)
layout_mode = 0
offset_left = 2.0
offset_top = -10.5
offset_right = 55.0
offset_bottom = 25.5
theme_override_colors/font_color = Color(0.105882, 0.133333, 0.211765, 1)
theme_override_font_sizes/font_size = 10
text = "Quit Game"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Sprite2D" type="Sprite2D" parent="."]
modulate = Color(1, 1, 1, 0)
top_level = true
position = Vector2(240, 190)
scale = Vector2(1.3, 1.3)
texture = ExtResource("7_fuxvp")
region_enabled = true
region_rect = Rect2(329, 19, 42, 16)

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_alkfq")
}

[connection signal="pressed" from="ColorRect/HBoxContainer/RetryButton" to="." method="_on_retry_button_pressed"]
[connection signal="pressed" from="ColorRect/HBoxContainer/BackToCastleButton" to="." method="_on_back_to_castle_button_pressed"]
[connection signal="pressed" from="ColorRect/HBoxContainer/QuitGameButton" to="." method="_on_quit_game_button_pressed"]
